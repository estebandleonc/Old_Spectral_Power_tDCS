# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
# Create line charts
line_charts_view <- line_charts(data_training, tasks, y_limits_line_chart, tasks)
# Save plots
for (task in tasks) {
plot <- line_charts_view[[task]]
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot, width = 8, height = 6)
###############################################################################
# FIT LINEAR MIXED MODELS
###############################################################################
results[[task]] <- run_LMEM(data_training, task, task)
###############################################################################
# CHECK RESIDUALS AND ASSUMPTIONS
###############################################################################
shapito_test_model_residuals[[task]] <- model_assumptions(results$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
###############################################################################
# EXPLORE INDIVIDUAL DIFFERENCES: HIGHER DEGREE AND WM BASELINE
###############################################################################
individual_diff_results[[task]] <- individual_differences(data_training, result$model, outcome = task)
#saveRDS(results, here::here("results", "results_Max_NB.rds"))
}
### Turn off scientific notation
options(scipen = 999)
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapito_test_model_residuals[[task]] <- model_assumptions(results$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, result$model, outcome = task)
#saveRDS(results, here::here("results", "results_Max_NB.rds"))
}
plot <- list()
results <- list()
shapito_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapito_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
#saveRDS(results, here::here("results", "results_Max_NB.rds"))
}
View(plot)
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[task], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapito_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
#saveRDS(results, here::here("results", "results_Max_NB.rds"))
}
View(plot)
View(plot)
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
#ggsave(filename = here::here("figures", file_name), plot = plot[[task]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapito_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
#saveRDS(results, here::here("results", "results_Max_NB.rds"))
}
View(plot)
View(results)
View(shapito_test_model_residuals)
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
plot <- list()
results <- list()
shapito_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot, width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
View(plot)
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
class(plot[[task]])
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]][[1]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
View(shapito_test_model_residuals)
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
plot <- list()
results <- list()
shapito_test_model_residuals <- list()
individual_diff_results <- list()
plot <- list()
results <- list()
shapiro_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_charts(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]][[1]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
# Organise data
training_results <- list()
training_results$results <- results
training_results$shapiro_test_model_residuals <- shapiro_test_model_residuals
training_results$individual_differences <- individual_diff_results
View(training_results)
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
plot <- list()
results <- list()
shapiro_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_chart(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]][[1]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
View(plot)
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot[[task]] <- line_chart(data_training, task, y_limits_line_chart[[task]], task)
file_name <- paste0("Mean_scores_", task, ".png")
ggsave(filename = here::here("figures", file_name), plot = plot[[task]], width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
# Loop through each dataset
for (task in tasks) {
# Create line charts
line_chart(data_training, task, y_limits_line_chart[[task]], task)
# Save line chart
ggsave(filename = here::here("figures", paste0("Mean_scores_", task, ".png")), width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
# Organise data
training_results <- list()
training_results$results <- results
training_results$shapiro_test_model_residuals <- shapiro_test_model_residuals
training_results$individual_differences <- individual_diff_results
# Save variables
saveRDS(training_results, here::here("results", "training_results.rds"))
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
View(data_training)
plot <- list()
results <- list()
shapiro_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
line_chart(data_training, task = task, y_limits_line_chart[[task]], title = task)
# Save line chart
ggsave(filename = here::here("figures", paste0("Mean_scores_", task, ".png")), width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
# Loop through each dataset
for (task in tasks) {
# Create line charts
line_chart(data_training, variable = task, y_limits_line_chart[[task]], title = task)
# Save line chart
ggsave(filename = here::here("figures", paste0("Mean_scores_", task, ".png")), width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
# Loop through each dataset
for (task in tasks) {
# Create line charts
line_chart(data_training, variable = task, y_limits_line_chart[[task]], title = task)
# Save line chart
ggsave(filename = here::here("figures", paste0("Mean_scores_", task, ".png")), width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
results <- list()
shapiro_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot <- line_chart(data_training, variable = task, y_limits_line_chart[[task]], title = task)
# Save line chart
ggsave(filename = here::here("figures", paste0("Mean_scores_", task, ".png")), plot = plot, width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Training tasks of interest
tasks = c("digit_span", "max_digit", "n_back", "max_nback")
y_limits_line_chart = list(c(40, 120), c(4, 8), c(200, 800), c(2, 4.5))
assumptions_y_limits = list(c(0, 50), NULL, c(0, 80), c(0, 80))
assumptions_x_limits = list(c(-40, 40), c(-3, 3), c(-300, 300), c(-2, 2))
names(y_limits_line_chart) <- tasks
names(assumptions_y_limits) <- tasks
names(assumptions_x_limits) <- tasks
# Load dataset and define factors
data_training <- read_sav(here::here("datasets", "Training.sav")) %>%
define_factors() %>%
mutate(condition_session = interaction(condition, session, sep = "_"))
results <- list()
shapiro_test_model_residuals <- list()
individual_diff_results <- list()
# Loop through each dataset
for (task in tasks) {
# Create line charts
plot <- line_chart(data_training, variable = task, y_limits_line_chart[[task]], title = task)
# Save line chart
ggsave(filename = here::here("figures", paste0("Mean_scores_", task, ".png")), plot = plot, width = 8, height = 6)
# Run Linear Mixed Effects Model
results[[task]] <- run_LMEM(data_training, task, task)
# Check residuals and assumptions
shapiro_test_model_residuals[[task]] <- model_assumptions(results[[task]]$model, task, assumptions_x_limits[[task]], assumptions_y_limits[[task]])
# Explore individual differences: higher degree and WM baseline
individual_diff_results[[task]] <- individual_differences(data_training, results[[task]]$model, outcome = task)
}
# Organise data
training_results <- list()
training_results$results <- results
training_results$shapiro_test_model_residuals <- shapiro_test_model_residuals
training_results$individual_differences <- individual_diff_results
# Save variables
saveRDS(training_results, here::here("results", "training_results.rds"))
View(training_results)
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Tests of interest
tests <- c("LET_RET", "LET_MAN", "COR_RET", "COR_MAN")
formula_complete <- c("condition*(diff_ds + diff_max_ds)",
"diff_ds + diff_max_ds",
"condition*(diff_nb + diff_max_nb)",
"diff_max_ds")
formula_tDCS <- c("diff_ds + diff_max_ds",
"diff_ds + diff_max_ds",
"diff_nb + diff_max_nb",
"diff_ds + diff_max_ds")
formula_control <- c("diff_ds + diff_max_ds",
"diff_ds + diff_max_ds",
"diff_nb + diff_max_nb",
"diff_max_ds")
names(formula_complete) <- tests
names(formula_tDCS) <- tests
names(formula_control) <- tests
# Tests of interest
tests <- c("LET_RET", "LET_MAN", "COR_RET", "COR_MAN")
formula_complete <- c("condition*(diff_ds + diff_max_ds)",
"diff_ds + diff_max_ds",
"condition*(diff_nb + diff_max_nb)",
"diff_max_ds")
formula_tDCS <- c("diff_ds + diff_max_ds",
"diff_ds + diff_max_ds",
"diff_nb + diff_max_nb",
"diff_ds + diff_max_ds")
formula_control <- c("diff_ds + diff_max_ds",
"diff_ds + diff_max_ds",
"diff_nb + diff_max_nb",
"diff_max_ds")
# Load dataset and define factors
data <- read_sav(here::here("datasets", "Complete_dataset.sav")) %>%
define_factors()
# Filter the dataset to include only sessions 1 and 2
data_filtered <- subset(data, session %in% c("Pre", "Post"))
results <- list()
# Load dataset and define factors
data <- read_sav(here::here("datasets", "Complete_dataset.sav")) %>%
define_factors()
# Filter the dataset to include only sessions pre and post
pre_post <- subset(data, session %in% c("Pre", "Post"))
results <- list()
for (test in tests) {
results[[test]] <- regression_training_tests(pre_post, test, formula_complete[[test]], formula_tDCS[[test]], formula_control[[test]])
}
for (test in tests) {
results[[test]] <- regression_training_tests(pre_post, test, formula_complete[test], formula_tDCS[test], formula_control[test])
}
formula_complete[1]
formula_complete[tests]
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
for (test in tests) {
results[[test]] <- regression_training_tests(pre_post, test, formula_complete[test], formula_tDCS[test], formula_control[test])
}
results <- list()
for (i in seq_along(tests)) {
test <- tests[i]
results[[test]] <- regression_training_tests(pre_post, test, as.formula(formula_complete[i]), as.formula(formula_tDCS[i]), as.formula(formula_control[i]))
}
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
# Tests of interest
tests <- c("LET_RET", "LET_MAN", "COR_RET", "COR_MAN")
formula_complete <- c("difference ~ condition*(diff_ds + diff_max_ds)",
"difference ~ diff_ds + diff_max_ds",
"difference ~ condition*(diff_nb + diff_max_nb)",
"difference ~ diff_max_ds")
formula_tDCS <- c("difference ~ diff_ds + diff_max_ds",
"difference ~ diff_ds + diff_max_ds",
"difference ~ diff_nb + diff_max_nb",
"difference ~ diff_ds + diff_max_ds")
formula_control <- c("difference ~ diff_ds + diff_max_ds",
"difference ~ diff_ds + diff_max_ds",
"difference ~ diff_nb + diff_max_nb",
"difference ~ diff_max_ds")
# Load dataset and define factors
data <- read_sav(here::here("datasets", "Complete_dataset.sav")) %>%
define_factors()
# Filter the dataset to include only sessions pre and post
pre_post <- subset(data, session %in% c("Pre", "Post"))
results <- list()
for (i in seq_along(tests)) {
test <- tests[i]
results[[test]] <- regression_training_tests(pre_post,
test,
as.formula(formula_complete[i]),
as.formula(formula_tDCS[i]),
as.formula(formula_control[i])
)
}
View(results)
### Turn off scientific notation
options(scipen = 999)
### Load package of functions
load_all("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/functions")
source("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/scripts/Analysis_training_tests.R", echo=TRUE)
View(results_training_tests)
source("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/scripts/Analysis_training_tests.R", echo=TRUE)
source("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/scripts/Analysis_training_tests.R", echo=TRUE)
source("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/scripts/Analysis_training.R", echo=TRUE)
source("C:/Users/Esteban/Desktop/Github/tDCS/scripts_R/scripts/Analysis_tests.R", echo=TRUE)
